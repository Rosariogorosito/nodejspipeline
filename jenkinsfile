node {
   def gitcommit
   stage('VerificaciÃ³n SCM') {
     checkout scm
     sh "git rev-parse --short HEAD > .git/commit-id"                        
     gitcommit = readFile('.git/commit-id').trim()
   }
   stage('test') {
     nodejs(nodeJSInstallationName: 'nodejs') {
       sh 'npm install --only=dev'
       sh 'npm test'
     }
   }

    stage('Docker Build & Push') {
    steps {
        withCredentials([rosario172mariposa12(credentialsId: 'docker-hub', usernameVariable: 'rosario172', passwordVariable: 'mariposa12')]) {
            script {
                docker.withRegistry('https://registry.hub.docker.com', 'docker-hub') {
                    // docker.build('nombre-de-tu-imagen').push('tag-de-tu-imagen')
                }
            }
        }
     }
  }
}
